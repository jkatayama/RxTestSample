@testable import RxTestSample///
/// @Generated by Mockolo
///



import RxCocoa
import RxSwift
import Swinject
import SwinjectStoryboard
import UIKit


class UseCaseProtocolMock: UseCaseProtocol {
    init() { }
    init(repository: RepositoryProtocol!) {
        self._repository = repository
    }


    var repositorySetCallCount = 0
    private var _repository: RepositoryProtocol!  { didSet { repositorySetCallCount += 1 } }
    var repository: RepositoryProtocol! {
        get { return _repository }
        set { _repository = newValue }
    }

    var executeCallCount = 0
    var executeHandler: (() -> (Single<SomeData>))?
    func execute() -> Single<SomeData> {
        executeCallCount += 1
        if let executeHandler = executeHandler {
            return executeHandler()
        }
        fatalError("executeHandler returns can't have a default value thus its handler must be set")
    }
}

